This new website is still very much a WIP. Thanks to [Drew Dimmery](https://ddimmery.com/) for starting point for this and post on how to make a quick Quarto website!
```{=html}
quarto preview docs
quarto preview
library(quarto)
install.packages("quarto")
library(quarto)
quarto_version()
library(quarto)
quarto_version()
quarto_version
quarto_version()
library(quarto)
quarto_version()
quarto render posts
install.packages("installr")
library(tidyverse)
library(rstanarm)
options(mc.cores = parallel::detectCores(logical = FALSE))
# The US census and CCES data use FIPS codes to identify states. For better
# interpretability, we label these FIPS codes with their corresponding abbreviation.
# Note that the FIPS codes include the district of Columbia and US territories which
# are not considered in this study, creating some gaps in the numbering system.
state_abb <- datasets::state.abb
state_fips <- c(1,2,4,5,6,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24,
25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,
44,45,46,47,48,49,50,51,53,54,55,56)
recode_fips <- function(column) {
factor(column, levels = state_fips, labels = state_abb)
}
cces_all_df <- read_csv("data/cces18_common_vv.csv.gz")
clean_cces <- function(df, remove_nas = TRUE){
## Abortion -- dichotomous (0 - Oppose / 1 - Support)
df$abortion <- abs(df$CC18_321d-2)
## State -- factor
df$state <- recode_fips(df$inputstate)
## Gender -- dichotomous (coded as -0.5 Female, +0.5 Male)
df$male <- abs(df$gender-2)-0.5
## ethnicity -- factor
df$eth <- factor(df$race,
levels = 1:8,
labels = c("White", "Black", "Hispanic", "Asian", "Native American", "Mixed", "Other", "Middle Eastern"))
df$eth <- fct_collapse(df$eth, "Other" = c("Asian", "Other", "Middle Eastern", "Mixed", "Native American"))
## Age -- cut into factor
df$age <- 2018 - df$birthyr
df$age <- cut(as.integer(df$age), breaks = c(0, 29, 39, 49, 59, 69, 120),
labels = c("18-29","30-39","40-49","50-59","60-69","70+"),
ordered_result = TRUE)
## Education -- factor
df$educ <- factor(as.integer(df$educ),
levels = 1:6,
labels = c("No HS", "HS", "Some college", "Associates", "4-Year College", "Post-grad"), ordered = TRUE)
df$educ <- fct_collapse(df$educ, "Some college" = c("Some college", "Associates"))
# Filter out unnecessary columns and remove NAs
df <- df %>% select(abortion, state, eth, male, age, educ)
if (remove_nas){
df <- df %>% drop_na()
}
return(df)
}
cces_all_df_cleaned <-  clean_cces(cces_all_df, remove_nas = TRUE)
# Load data frame created in the appendix. The data frame that contains the poststratification
# table is called poststrat_df
poststrat_df <- read_csv("data/poststrat_df.csv")
statelevel_predictors_df <- read_csv('data/statelevel_predictors.csv')
poststrat_df_60k <- left_join(poststrat_df, statelevel_predictors_df, by = "state")
quarto preview
print(getwd())
library(tidyverse)
library(rstanarm)
set.seed(605)
options(mc.cores = parallel::detectCores(logical = FALSE))
# The US census and CCES data use FIPS codes to identify states. For better
# interpretability, we label these FIPS codes with their corresponding abbreviation.
# Note that the FIPS codes include the district of Columbia and US territories which
# are not considered in this study, creating some gaps in the numbering system.
state_abb <- datasets::state.abb
state_fips <- c(1,2,4,5,6,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24,
25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,
44,45,46,47,48,49,50,51,53,54,55,56)
recode_fips <- function(column) {
factor(column, levels = state_fips, labels = state_abb)
}
cces_all_df <- read_csv("data/cces18_common_vv.csv.gz")
clean_cces <- function(df, remove_nas = TRUE){
## Abortion -- dichotomous (0 - Oppose / 1 - Support)
df$abortion <- abs(df$CC18_321d-2)
## State -- factor
df$state <- recode_fips(df$inputstate)
## Gender -- dichotomous (coded as -0.5 Female, +0.5 Male)
df$male <- abs(df$gender-2)-0.5
## ethnicity -- factor
df$eth <- factor(df$race,
levels = 1:8,
labels = c("White", "Black", "Hispanic", "Asian", "Native American", "Mixed", "Other", "Middle Eastern"))
df$eth <- fct_collapse(df$eth, "Other" = c("Asian", "Other", "Middle Eastern", "Mixed", "Native American"))
## Age -- cut into factor
df$age <- 2018 - df$birthyr
df$age <- cut(as.integer(df$age), breaks = c(0, 29, 39, 49, 59, 69, 120),
labels = c("18-29","30-39","40-49","50-59","60-69","70+"),
ordered_result = TRUE)
## Education -- factor
df$educ <- factor(as.integer(df$educ),
levels = 1:6,
labels = c("No HS", "HS", "Some college", "Associates", "4-Year College", "Post-grad"), ordered = TRUE)
df$educ <- fct_collapse(df$educ, "Some college" = c("Some college", "Associates"))
# Filter out unnecessary columns and remove NAs
df <- df %>% select(abortion, state, eth, male, age, educ)
if (remove_nas){
df <- df %>% drop_na()
}
return(df)
}
cces_all_df_cleaned <-  clean_cces(cces_all_df, remove_nas = TRUE)
# Load data frame created in the appendix. The data frame that contains the poststratification
# table is called poststrat_df
poststrat_df <- read_csv("data/poststrat_df.csv")
statelevel_predictors_df <- read_csv('data/statelevel_predictors.csv')
poststrat_df_60k <- left_join(poststrat_df, statelevel_predictors_df, by = "state")
meanfield_60k <- readRDS("fit_60k_meanfield.rds")
mcmc_60k <- readRDS("fit_60k_mcmc.rds")
# Meanfield
epred_mat_mf <- posterior_epred(meanfield_60k, newdata = poststrat_df_60k, draws = 1000)
mrp_estimates_vector_mf <- epred_mat_mf %*% poststrat_df_60k$n / sum(poststrat_df_60k$n)
mrp_estimate_mf <- c(mean = mean(mrp_estimates_vector_mf),
sd = sd(mrp_estimates_vector_mf))
# MCMC
epred_mat_mcmc <- posterior_epred(mcmc_60k, newdata = poststrat_df_60k, draws = 1000)
mrp_estimates_vector_mcmc <- epred_mat_mcmc %*% poststrat_df_60k$n / sum(poststrat_df_60k$n)
mrp_estimate_mcmc <- c(mean = mean(mrp_estimates_vector_mcmc),
sd = sd(mrp_estimates_vector_mcmc))
cat("Meanfield MRP estimate mean, sd: ", round(mrp_estimate_mf, 3))
cat("MCMC MRP estimate mean, sd: ", round(mrp_estimate_mcmc, 3))
