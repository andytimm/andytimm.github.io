}
model {
y ~ normal(mu, sigma);
mu ~ normal(0, 10);
sigma ~ cauchy(0, 5);
}
generated quantities {
real log_lik;
log_lik = normal_lpdf(y | mu, sigma);
}
"
# Generate some data
set.seed(123)
N <- 100
y <- rnorm(N, mean = 2, sd = 1)
# Define the function we want to estimate the expectation of
g <- function(x) x[1] * x[2]
# Define the proposal distribution
proposal_density <- function(x) dnorm(x[1], mean = 2, sd = 1) * dcauchy(x[2], location = 0, scale = 5)
# Use SNIS to estimate the expectation of g with respect to the posterior distribution
proposal_samples <- mvrnorm(1000, c(2, 1), matrix(c(1, 0, 0, 1), ncol = 2))
library(MASS)
# Use SNIS to estimate the expectation of g with respect to the posterior distribution
proposal_samples <- mvrnorm(1000, c(2, 1), matrix(c(1, 0, 0, 1), ncol = 2))
weights <- apply(proposal_samples, 1, function(x) g(x) * exp(stan_log_lik(x, data = list(N = N, y = y))) / proposal_density(x))
weights <- apply(proposal_samples, 1, function(x) g(x) * exp(extract_log_lik(x, data = list(N = N, y = y))) / proposal_density(x))
library(brms)
weights <- apply(proposal_samples, 1, function(x) g(x) * exp(stan_log_lik(x, data = list(N = N, y = y))) / proposal_density(x))
?
?stan_log_lik
stan_log_lik <- function(theta, y, stan_data) {
# Merge the parameter values with the data and stan_data
stan_data <- c(list(theta = theta), stan_data, list(y = y))
# Compile and sample from the posterior distribution
fit <- sampling(stan_model, data = stan_data, algorithm = "Fixed_param",
iter = 1, chains = 1, refresh = 0, seed = 123)
# Extract the log posterior density and return it as the log-likelihood
log_lik <- fit[[1]]$lp__
return(log_lik)
}
weights <- apply(proposal_samples, 1, function(x) g(x) * exp(stan_log_lik(x, data = list(N = N, y = y))) / proposal_density(x))
quarto preview
install.packages("loo")
q_x <- rnorm(100000)
ratios <- dt(x)/dnorm(x)
ratios <- dt(q_x)/dnorm(q_x)
ratios <- dt(q_x,10)/dnorm(q_x)
library(tidyverse)
tibble(
q_x ~ rnorm(100000)
ratios ~ dt(q_x,10)/dnorm(q_x)
tibble(
q_x = rnorm(100000),
ratios = dt(q_x,10)/dnorm(q_x)
)
simulated_data <- tibble(
q_x = rnorm(100000),
ratios = dt(q_x,10)/dnorm(q_x)
)
boxplot(simulated_data$ratios,sum(simulated_data$ratios))
simulated_data <- tibble(
q_x = rnorm(100000),
ratios = dt(q_x,5)/dnorm(q_x)
)
simulated_data %>%
arrange(ratios) %>%
ggplot(aes(x = ratios)) + geom_point()
simulated_data <- tibble(
q_x = rnorm(1000000),
ratios = dt(q_x,5)/dnorm(q_x)
n = seq(1,1000000)
simulated_data <- tibble(
q_x = rnorm(1000000),
ratios = dt(q_x,5)/dnorm(q_x),
n = seq(1,1000000)
)
simulated_data %>%
arrange(ratios) %>%
ggplot(aes(x = n,y = ratios)) + geom_point()
simulated_data <- tibble(
q_x = rnorm(10000),
ratios = dt(q_x,5)/dnorm(q_x),
n = seq(1,10000)
)
simulated_data %>%
arrange(ratios) %>%
ggplot(aes(x = n,y = ratios)) + geom_point()
simulated_data <- tibble(
q_x = rnorm(10000),
ratios = dt(q_x,5)/dnorm(q_x)
)
simulated_data %>%
arrange(ratios) %>%
mutate(n = seq(1,10000)) %>%
ggplot(aes(x = n,y = ratios)) + geom_point()
mean(simulated_data$ratios)
max(simulated_data$ratios)
simulated_data <- tibble(
q_x = rnorm(10000),
ratios = dt(q_x,5)/dnorm(q_x)
)
mean(simulated_data$ratios)
max(simulated_data$ratios)
simulated_data %>%
arrange(ratios) %>%
mutate(n = seq(1,10000)) %>%
ggplot(aes(x = n,y = ratios)) +
geom_point() +
geom_hline()
simulated_data %>%
arrange(ratios) %>%
mutate(n = seq(1,10000)) %>%
ggplot(aes(x = n,y = ratios)) +
geom_point() +
geom_hline(yintercept = mean(simulated_data$ratios))
simulated_data %>%
arrange(ratios) %>%
mutate(n = seq(1,10000)) %>%
ggplot(aes(x = n,y = ratios)) +
geom_point()
library(loo)
options(mc.cores = detectCores())
options(mc.cores = 8)
first_try_psis <- psis(simulated_data$ratios)
first_try_psis$diagnostics
first_try_psis <- psis(log(simulated_data$ratios))
first_try_psis$diagnostics
first_try_psis <- psis(log(simulated_data$ratios)r_eff = NA)
first_try_psis <- psis(log(simulated_data$ratios),
r_eff = NA)
first_try_psis$diagnostics
simulated_data %>%
arrange(ratios) %>%
mutate(n = seq(1,10000)) %>%
ggplot(aes(x = n,y = ratios)) +
geom_point() +
ggtitle("A pretty typical 'close to good' set of Importance Ratios")
simulated_data <- tibble(
q_x = rnorm(10000),
manageable_ratios = dt(q_x,5)/dnorm(q_x),
unmanageable_ratios = dcauchy(q_x)/dnorm(q_x)
)
simulated_data <- tibble(
q_x = rnorm(10000),
manageable_ratios = dt(q_x,5)/dnorm(q_x),
unmanageable_ratios = dcauchy(q_x)/dnorm(q_x)
)
View(simulated_data)
mean(simulated_data$unmanageable_ratios)
max(simulated_data$unmanageable_ratios)
simulated_data <- tibble(
q_x = rnorm(100000),
manageable_ratios = dt(q_x,5)/dnorm(q_x),
unmanageable_ratios = dcauchy(q_x)/dnorm(q_x)
)
mean(simulated_data$manageable_ratios)
max(simulated_data$manageable_ratios)
mean(simulated_data$unmanageable_ratios)
max(simulated_data$unmanageable_ratios)
simulated_data %>%
arrange(manageable_ratios) %>%
mutate(n = seq(1,10000)) %>%
ggplot(aes(x = n,y = ratios)) +
geom_point() +
ggtitle("A pretty typical 'close to good' set of importance ratios")
simulated_data %>%
arrange(manageable_ratios) %>%
mutate(n = seq(1,10000)) %>%
ggplot(aes(x = n,y = manageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'close to good' set of importance ratios")
simulated_data %>%
arrange(manageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = manageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'close to good' set of importance ratios")
simulated_data %>%
arrange(manageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = manageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'close to good' set of importance ratios")
manageable_psis <- psis(log(simulated_data$ratios),
r_eff = NA)
manageable_psis <- psis(log(simulated_data$manageable_ratios),
r_eff = NA)
first_try_psis$diagnostics
manageable_psis$diagnostics
simulated_data %>%
arrange(unmanageable_ratios) %>%
mutate(n = seq(1,10000)) %>%
ggplot(aes(x = n,y = unmanageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'unsaveable' set of importance ratios")
simulated_data %>%
arrange(unmanageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = unmanageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'unsaveable' set of importance ratios")
unmanageable_psis <- psis(log(simulated_data$unmanageable_ratios),
r_eff = NA)
manageable_psis$diagnostics
unmanageable_psis$diagnostics
simulated_data <- tibble(
q_x = rnorm(100000),
manageable_p_x = rt(100000,5),
unmanageable_p_x = rcauchy(100000),
manageable_ratios = dt(q_x,5)/dnorm(q_x),
unmanageable_ratios = dcauchy(q_x)/dnorm(q_x)
)
simulated_data %>%
pivot_longer(c(p_x,manageable_p_x,unmanageable_p_x),
values_to = draws,names_to = distributions) %>% glimpse()
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = draws,names_to = distributions) %>% glimpse()
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",names_to = "distributions") %>% glimpse()
density_visual <- simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions))
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions))
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density()
density_visual <- simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-3,3)
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-3,3)
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10)
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-20,20)
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10)
density_visual <- simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10) +
ggtitle("Visualizing the distributions in question")
density_visual <- simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10) +
ggtitle("Visualizing the distributions in question") +
theme(legend.position="bottom")
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10) +
ggtitle("Visualizing the distributions in question") +
theme(legend.position="bottom")
density_visual <- simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10) +
ggtitle("Visualizing the distributions in question") +
theme(legend.position="none")
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10) +
ggtitle("Visualizing the distributions in question") +
theme(legend.position="none")
library(gridExtra)
grid.arrange(reasonable_ratios,density_visual,unreasonable_ratios)
reasonable_ratios <- simulated_data %>%
arrange(manageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = manageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'close to good' set of importance ratios")
unreasonable_ratios <- simulated_data %>%
arrange(unmanageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = unmanageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'unsaveable' set of importance ratios")
density_visual <- simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10) +
ggtitle("Visualizing the distributions in question") +
theme(legend.position="none")
grid.arrange(reasonable_ratios,density_visual,unreasonable_ratios)
grid.arrange(reasonable_ratios,unreasonable_ratios)
unmanageable_psis$diagnostics
manageable_psis <- psis(log(simulated_data$manageable_ratios),
r_eff = NA)
manageable_psis$diagnostics
simulated_data %>%
arrange(manageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = manageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'close to good' set of importance ratios")
max(simulated_data$unmanageable_ratios)
set.seed(605)
simulated_data <- tibble(
q_x = rnorm(100000),
manageable_p_x = rt(100000,5),
unmanageable_p_x = rcauchy(100000),
manageable_ratios = dt(q_x,5)/dnorm(q_x),
unmanageable_ratios = dcauchy(q_x)/dnorm(q_x)
)
mean(simulated_data$manageable_ratios)
max(simulated_data$manageable_ratios)
mean(simulated_data$unmanageable_ratios)
max(simulated_data$unmanageable_ratios)
reasonable_ratios <- simulated_data %>%
arrange(manageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = manageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'close to good' set of importance ratios")
unreasonable_ratios <- simulated_data %>%
arrange(unmanageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = unmanageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'unsaveable' set of importance ratios")
simulated_data %>%
arrange(manageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = manageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'close to good' set of importance ratios")
simulated_data %>%
arrange(unmanageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = unmanageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'unsaveable' set of importance ratios")
mean(simulated_data$unmanageable_ratios)
max(simulated_data$unmanageable_ratios)
simulated_data %>%
arrange(unmanageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = unmanageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'unsaveable' set of importance ratios")
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10) +
ggtitle("Visualizing the distributions in question") +
theme(legend.position="none")
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10) +
ggtitle("Visualizing the distributions in question") +
theme(legend.position="none")
unmanageable_psis <- psis(log(simulated_data$unmanageable_ratios),
r_eff = NA)
unmanageable_psis$diagnostics
?dcauchy
simulated_data <- tibble(
q_x = rnorm(100000),
manageable_p_x = rt(100000,5),
unmanageable_p_x = rcauchy(100000),
manageable_ratios = dt(q_x,5)/dnorm(q_x),
unmanageable_ratios = dcauchy(q_x,0,2)/dnorm(q_x)
)
mean(simulated_data$manageable_ratios)
max(simulated_data$manageable_ratios)
mean(simulated_data$unmanageable_ratios)
max(simulated_data$unmanageable_ratios)
library(tidyverse)
library(loo)
library(gridExtra)
set.seed(605)
options(mc.cores = 8)
simulated_data <- tibble(
q_x = rnorm(100000),
manageable_p_x = rt(100000,5),
unmanageable_p_x = rcauchy(100000),
manageable_ratios = dt(q_x,5)/dnorm(q_x),
unmanageable_ratios = dcauchy(q_x,0,3)/dnorm(q_x)
)
mean(simulated_data$manageable_ratios)
max(simulated_data$manageable_ratios)
mean(simulated_data$unmanageable_ratios)
max(simulated_data$unmanageable_ratios)
simulated_data %>%
arrange(manageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = manageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'close to good' set of importance ratios")
simulated_data %>%
arrange(unmanageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = unmanageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'unsaveable' set of importance ratios")
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10) +
ggtitle("Visualizing the distributions in question") +
theme(legend.position="none")
manageable_psis <- psis(log(simulated_data$manageable_ratios),
r_eff = NA)
manageable_psis$diagnostics
unmanageable_psis <- psis(log(simulated_data$unmanageable_ratios),
r_eff = NA)
unmanageable_psis$diagnostics
simulated_data <- tibble(
q_x = rnorm(100000),
manageable_p_x = rt(100000,5),
unmanageable_p_x = rcauchy(100000),
manageable_ratios = dt(q_x,5)/dnorm(q_x),
unmanageable_ratios = dcauchy(q_x,0,10)/dnorm(q_x)
)
mean(simulated_data$manageable_ratios)
max(simulated_data$manageable_ratios)
mean(simulated_data$unmanageable_ratios)
max(simulated_data$unmanageable_ratios)
simulated_data %>%
arrange(manageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = manageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'close to good' set of importance ratios")
simulated_data %>%
arrange(unmanageable_ratios) %>%
mutate(n = seq(1,100000)) %>%
ggplot(aes(x = n,y = unmanageable_ratios)) +
geom_point() +
ggtitle("A pretty typical 'unsaveable' set of importance ratios")
simulated_data %>%
pivot_longer(c(q_x,manageable_p_x,unmanageable_p_x),
values_to = "draws",
names_to = "distributions") %>%
ggplot(aes(x = draws, color = distributions)) +
geom_density() +
xlim(-10,10) +
ggtitle("Visualizing the distributions in question") +
theme(legend.position="none")
manageable_psis <- psis(log(simulated_data$manageable_ratios),
r_eff = NA)
manageable_psis$diagnostics
unmanageable_psis <- psis(log(simulated_data$unmanageable_ratios),
r_eff = NA)
unmanageable_psis$diagnostics
1.960477886089513e-4
1428/.28
