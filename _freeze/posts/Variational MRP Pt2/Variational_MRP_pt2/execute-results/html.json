{
  "hash": "07fc38823aaf5f63766be5e53a03cd34",
  "result": {
    "markdown": "---\nlayout: post\ntitle: Variational Inference for MRP with Reliable Posterior Distributions\nsubtitle: Part 2\ndate: 2022-10-28\ndraft: True\ncategories:\n- MRP\n- BART\n- Variational Inference\n---\n\n\nThis is the second post in my series on using Variational Inference to speed up relatively complex Bayesian like Multilevel Regression and Poststratification models without the approximation being of disastrously poor quality. In the last post, I laid out why such reformulating the Bayesian inference problem as optimization might be desirable, but previewed why this might be quite hard to find high quality approximations amenable to optimization. I then introduced our running example (predicting national/sub-national opinion on an abortion question from the CCES using MRP), and gave an initial introduction to a version of Variational Inference where we maximize the Evidence Lower Bound (ELBO) as an objective, and do so using a mean-field Gaussian approximation. We saw that with 60k examples, this took about 8 hours to fit with MCMC, but 144 seconds (!) with VI.\n\nIn this post, we'll explore the shortcomings of this initial approximation, and take a first pass at trying to better with a more complex (full rank) variational approximation. The goal is to get a better feel for what failing models could look like, at least in this relatively simple case.\n\nThe rough plan for the series is as follows:\n\n1.  [Introducing the Problem- Why is VI useful, why VI can produce spherical cows](https://andytimm.github.io/posts/Variational%20MRP%20Pt1/variational_mrp_pt1.html)\n2.  **(This post)** How far does iteration on classic VI algorithms like mean-field and full-rank get us?\n3.  Some theory on why posterior approximation with VI can be so poor\n4.  Seeing if some more sophisticated techniques like normalizing flows help\n\n\n::: {.cell}\n\n:::\n\n\n# The disclaimer\n\nOne sort of obvious objections to how I've set up this series is \"Why not talk about theory on why VI approximations can be poor before trying stuff?\". While in practice I did read a lot of the papers for the next post before writing this one, I think there's a lot of value is looking at failed solutions to a problem to build up intuition about what our failure mode looks like, and what it might require to get it right. <Example or two to tease this once I have them>.\n\n# Toplines\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeanfield_60k <- readRDS(\"fit_60k_meanfield.rds\")\nmcmc_60k <- readRDS(\"fit_60k_mcmc.rds\")\n\n# Meanfield \nepred_mat_mf <- posterior_epred(meanfield_60k, newdata = poststrat_df_60k, draws = 1000)\nmrp_estimates_vector_mf <- epred_mat_mf %*% poststrat_df_60k$n / \n                                              sum(poststrat_df_60k$n)\nmrp_estimate_mf <- c(mean = mean(mrp_estimates_vector_mf),\n                     sd = sd(mrp_estimates_vector_mf))\n\n\n# MCMC \nepred_mat_mcmc <- posterior_epred(mcmc_60k, newdata = poststrat_df_60k, draws = 1000)\nmrp_estimates_vector_mcmc <- epred_mat_mcmc %*% poststrat_df_60k$n /\n                                                  sum(poststrat_df_60k$n)\nmrp_estimate_mcmc <- c(mean = mean(mrp_estimates_vector_mcmc),\n                       sd = sd(mrp_estimates_vector_mcmc))\n\ncat(\"Meanfield MRP estimate mean, sd: \", round(mrp_estimate_mf, 3))\ncat(\"MCMC MRP estimate mean, sd: \", round(mrp_estimate_mcmc, 3))\n```\n:::\n\n\n|   | Mean  | SD  |\n|---|---|---|\n| MCMC  | 43.9%  |  .2% |\n| mean-field VI  |  43.7% | .2%  |\n\nStarting with basics, the toplines are pretty much identical, which is a good start. The minor difference here could easily be simulation error- from a few quick re-runs these\noften end up having matching means to 3 decimals.\n\n# State Level Estimates\n\nWhat happens if we produce state level estimates, similar to the plot last post\ncomparing MRP to a simple weighted estimate? Note that I'll steer away from\nthe MRP Case Study example here in a few ways. I'll use `tidybayes` for\nworking with the draws (more elegant than their loop based approach),\nand I'll use more draws (helps with simulation error in smaller states).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmcmc_state_level <- poststrat_df_60k %>% add_epred_draws(mcmc_60k, ndraws = 1000)\nmfvi_state_level <- poststrat_df_60k %>% add_epred_draws(meanfield_60k, ndraws = 1000)\n\nmcmc_state_level %>% glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 12,000,000\nColumns: 13\nGroups: state, eth, male, age, educ, n, repvote, region, .row [12,000]\n$ state      <chr> \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\",…\n$ eth        <chr> \"White\", \"White\", \"White\", \"White\", \"White\", \"White\", \"Whit…\n$ male       <dbl> -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5,…\n$ age        <chr> \"18-29\", \"18-29\", \"18-29\", \"18-29\", \"18-29\", \"18-29\", \"18-2…\n$ educ       <chr> \"No HS\", \"No HS\", \"No HS\", \"No HS\", \"No HS\", \"No HS\", \"No H…\n$ n          <dbl> 23948, 23948, 23948, 23948, 23948, 23948, 23948, 23948, 239…\n$ repvote    <dbl> 0.6437414, 0.6437414, 0.6437414, 0.6437414, 0.6437414, 0.64…\n$ region     <chr> \"South\", \"South\", \"South\", \"South\", \"South\", \"South\", \"Sout…\n$ .row       <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ .chain     <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ .iteration <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ .draw      <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ .epred     <dbl> 0.5771322, 0.5189677, 0.5483006, 0.5421404, 0.5417602, 0.55…\n```\n:::\n:::\n\n\nIf you haven't worked with `tidybayes` before, the glimpse above should help\ngive some intuition about the new shape of the data- we've take the 12,000 row\n`poststrat_df_60k`, and added a row per observation per draw, with the prediction\n(.epred) and related metadata. This gives\n12,000 x 1,000 = 12,000,000 million rows. This really isn't the most space\nefficient storage, but it allows for very elegant `dplyr` style manipulation of\nresults and quick exploration.\n\nLet's now plot and compare the 50 and 95% credible intervals by state between\nthe two models.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmcmc_state_summary <- mcmc_state_level %>% \n                        # multiply each draw by it's cell's proportion of state N\n                        # this is the P in MRP\n                        group_by(state,.draw) %>%\n                        mutate(postrat_draw = sum(.epred*(n/sum(n)))) %>%\n                        group_by(state) %>%\n                        median_qi(postrat_draw, .width = c(.5,.95)) %>%\n                        mutate(model = \"mcmc\")\nmfvi_state_summary <- mfvi_state_level %>% \n                        group_by(state,.draw) %>%\n                        mutate(postrat_draw = sum(.epred*(n/sum(n)))) %>%\n                        group_by(state) %>%\n                        median_qi(postrat_draw, .width = c(.5,.95)) %>%\n                        mutate(model = \"MF-VI\")\n\ncombined_summary <- bind_rows(mcmc_state_summary,mfvi_state_summary)\n\ncombined_summary %>%\n  mutate(ordered_state = fct_reorder(combined_summary$state,\n                                     combined_summary$postrat_draw)) %>%\n  ggplot(aes(y = ordered_state,\n             x = postrat_draw,\n             xmin = .lower,\n             xmax = .upper,\n             color = model)) +\n  geom_pointinterval(position = position_dodge(1)) +\n  xlim(.25,.75) +\n  theme(legend.position=\"top\")\n```\n\n::: {.cell-output-display}\n![](Variational_MRP_pt2_files/figure-html/unnamed-chunk-4-1.png){width=768}\n:::\n:::\n\n... That looks concerning. What's happened here?\n\nWhat might you get wrong if you used the VI approximation for inference here? If you\nonly cared about the median estimate primarily, you might be ok with this effort.\nIf you care about uncertainty though, here's a non-exaustive list of concerns here:\n\n1.  Probably unimodal, smooth\nposterior distributions from MCMC have gone off-course to the point where the\nMedian/50/95% presentation no longer seems up to expressing the posterior shape\n(more on this in a second).\n2.   The MF-VI posteriors are often narrower in 50% or 95% CI- we'd on average\nunderestimate various types of uncertainty here.\n3.   Worse[^1], the MF-VI posterior's CIs aren't **consistently** narrower, either in\nthe sense they are always narrower, or that they tend to consistently distort the\nsame way. Sometimes both the 50% and 95% are just a small amount narrower than\nMCMC- the Michigan posterior attempt looks passable. Sometimes things are worse,\nwith 50% MFVI CIs almost as wide as the MCMC 95% interval- Wyoming shows such a \ndistortion. Sometimes the probability mass between 50% and 95% is confined\nto such a minuscule range it looks like I forgot to plot it. \n\nThat last point is\nparticularly important because it suggests there's no easy rule of thumb for\nmechanically correcting these intervals, or deciding which could be plausible\napproximations without the MCMC plot alongside to guide that process. We can't\nuse VI to save a ton of time, infer the intervals consistently need to x% be wider,\nand call it a day- we need to reckon more precisely with why they're distorted.\n\nLet's return now to the point about how the shape has gone wrong. Below is\na dot plot ([Kay et al., 2016](https://dl.acm.org/doi/10.1145/2858036.2858558))- each\npoint here represents about 1% of the probability mass. I enjoy this approach\nto posterior visualization when things are getting weird, as this clarifies a\nlot about the full shape of the posterior\ndistribution, making fewer smoothing assumptions like a density or eye plot might.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmcmc_state_points <- mcmc_state_level %>% \n                        # multiply each draw by it's cell's proportion of state N\n                        # this is the P in MRP\n                        group_by(state,.draw) %>%\n                        summarize(postrat_draw = sum(.epred*(n/sum(n)))) %>%\n                        mutate(model = \"mcmc\")\nmfvi_state_points <- mfvi_state_level %>% \n                        group_by(state,.draw) %>%\n                        summarize(postrat_draw = sum(.epred*(n/sum(n)))) %>%\n                        mutate(model = \"MF-VI\")\n\ncombined_points <- mcmc_state_points %>%\n                      bind_rows(mfvi_state_points) %>%\n                      ungroup()\n\ncombined_points %>%\n  mutate(ordered_state = fct_reorder(combined_points$state,\n                                     combined_points$postrat_draw)) %>%\n  ggplot(aes(y = ordered_state,\n             x = postrat_draw,\n             color = model)) +\n     stat_dots(quantiles = 100) +\n     facet_wrap(~model) +\n     theme(legend.position=\"none\")\n```\n\n::: {.cell-output-display}\n![](Variational_MRP_pt2_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\nEek. The closer to the individual draws we get, the less these two models seem to be\nproducing comparable estimates. This isn't me expressing an aesthetic preference\nfor smooth, unimodal distributions- the MFVI plots in this view imply beliefs\nlike \"support for this policy in Wyoming is overwhelmingly likely to fall in 1 of\n3 narrow ranges, all other values are unlikely\"[^2]. Other similar humorous claims\nare easy to find.\n\nStepping back for a second, if our use-case for this model takes pretty\nmuch any form of interest in quantifying uncertainty accurately, this is not\nan acceptable approximation. I could poke more holes, but I can more profitably\ndo that after I've explored some theory of why VI models struggle, and brought\nin some more sophisticated diagnostic tools than looking with our eyeballs[^3].\n\n# Do more basic fixes solve anything?\n\nSo I've been billing this simple mean-field model as a first pass- I fit it on\nmore or less default `rstanarm` parameters, and \n\n## Lowering the tolerance\n\n\n\n## Full-Rank Approximation\n\n# Where to from here? (Why is it like this!?)\n\n[^1]: Really, the worst type of wrong, completely unpredictable wrong. If you spend\ntime staring to try to infer a causal pattern of which states we can't estimate well,\nyou're likely just going to end up confused.\n[^2]: Some of these MFVI distributions are bad enough that you might reasonably\nwonder if some of the badness is just plotting weirdness. That was my intuition at\nfirst. Of course though, this is sufficient granularity to make the MCMC results\nlook reasonable. But even if you zoom in on 1 or two states and add way more\npoints, the improbably sharp spikes remain.\n[^3]: Phrase due to Richard McElreath.",
    "supporting": [
      "Variational_MRP_pt2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}